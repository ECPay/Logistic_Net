<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rollbar</name>
    </assembly>
    <members>
        <member name="T:Rollbar.AccessTokenQueuesMetadata">
            <summary>
            Models metadata needed to keep track of a given Rollbar access token usage.
            </summary>
        </member>
        <member name="M:Rollbar.AccessTokenQueuesMetadata.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.AccessTokenQueuesMetadata"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.AccessTokenQueuesMetadata.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.AccessTokenQueuesMetadata"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
        </member>
        <member name="P:Rollbar.AccessTokenQueuesMetadata.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Rollbar.AccessTokenQueuesMetadata.Queues">
            <summary>
            Gets the queues associated with a given Rollbar access token.
            </summary>
            <value>
            The queues.
            </value>
        </member>
        <member name="P:Rollbar.AccessTokenQueuesMetadata.NextTimeTokenUsage">
            <summary>
            Gets the next time token usage.
            </summary>
            <value>
            The next time token usage.
            </value>
            <remarks>
            This property, when has a value, places a restriction on the token usage 
            until or past the time specified by the property value.
            </remarks>
        </member>
        <member name="P:Rollbar.AccessTokenQueuesMetadata.TokenUsageDelay">
            <summary>
            Gets the token usage delay.
            </summary>
            <value>
            The token usage delay.
            </value>
        </member>
        <member name="M:Rollbar.AccessTokenQueuesMetadata.IncrementTokenUsageDelay">
            <summary>
            Increments the token usage delay.
            </summary>
        </member>
        <member name="M:Rollbar.AccessTokenQueuesMetadata.ResetTokenUsageDelay">
            <summary>
            Resets the token usage delay.
            </summary>
        </member>
        <member name="T:Rollbar.Classification.Classification">
            <summary>
            Class Classification.
            Implements the <see cref="T:Rollbar.Classification.IClassification" />
            </summary>
            <seealso cref="T:Rollbar.Classification.IClassification" />
        </member>
        <member name="F:Rollbar.Classification.Classification.classificationsByID">
            <summary>
            The classifications by identifier
            </summary>
        </member>
        <member name="M:Rollbar.Classification.Classification.MatchClassification(System.Object[])">
            <summary>
            Matches the classification.
            </summary>
            <param name="classifierObjects">The classifier objects.</param>
            <returns>Classification.</returns>
        </member>
        <member name="M:Rollbar.Classification.Classification.MatchClassification(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Matches the classification.
            </summary>
            <param name="classifierObjects">The classifier objects.</param>
            <returns>Classification.</returns>
        </member>
        <member name="M:Rollbar.Classification.Classification.MatchClassification(Rollbar.Classification.Classifier[])">
            <summary>
            Matches the classification.
            </summary>
            <param name="classifiers">The classifiers.</param>
            <returns>Classification.</returns>
        </member>
        <member name="M:Rollbar.Classification.Classification.MatchClassification(System.Collections.Generic.IEnumerable{Rollbar.Classification.Classifier})">
            <summary>
            Matches the classification.
            </summary>
            <param name="classifiers">The classifiers.</param>
            <returns>Classification.</returns>
        </member>
        <member name="F:Rollbar.Classification.Classification._classifiers">
            <summary>
            The classifiers
            </summary>
        </member>
        <member name="F:Rollbar.Classification.Classification._classifierTypes">
            <summary>
            The classifier types
            </summary>
        </member>
        <member name="M:Rollbar.Classification.Classification.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.Classification.Classification"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.Classification.Classification.#ctor(Rollbar.Classification.Classifier[])">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Classification.Classification"/> class.
            </summary>
            <param name="classifiers">The classifiers.</param>
        </member>
        <member name="M:Rollbar.Classification.Classification.#ctor(System.Collections.Generic.IEnumerable{Rollbar.Classification.Classifier})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Classification.Classification"/> class.
            </summary>
            <param name="classifiers">The classifiers.</param>
        </member>
        <member name="M:Rollbar.Classification.Classification.GenerateID(System.Collections.Generic.IEnumerable{Rollbar.Classification.Classifier})">
            <summary>
            Generates the identifier.
            </summary>
            <param name="classifiers">The classifiers.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Rollbar.Classification.Classification.ClassifiersCount">
            <summary>
            Gets the classifiers count.
            </summary>
            <value>The classifiers count.</value>
        </member>
        <member name="P:Rollbar.Classification.Classification.Classifiers">
            <summary>
            Gets the classifiers.
            </summary>
            <value>The classifiers.</value>
        </member>
        <member name="P:Rollbar.Classification.Classification.ClassifierTypes">
            <summary>
            Gets the classifier types.
            </summary>
            <value>The classifier types.</value>
        </member>
        <member name="P:Rollbar.Classification.Classification.ID">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Rollbar.Classification.Classification.Rollbar#Classification#Identifiable#ID">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Rollbar.Classification.Classification.GetAllKnownIDs">
            <summary>
            Gets all known IDs.
            </summary>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
            <value>All known IDs.</value>
        </member>
        <member name="M:Rollbar.Classification.Classification.Rollbar#Classification#Identifiable#GetAllKnownIDs">
            <summary>
            Gets all known IDs.
            </summary>
            <returns>IEnumerable&lt;System.Object&gt;.</returns>
            <value>All known IDs.</value>
        </member>
        <member name="T:Rollbar.Classification.Classifier">
            <summary>
            Class Classifier.
            Implements the <see cref="T:Rollbar.Classification.IClassifier" />
            </summary>
            <seealso cref="T:Rollbar.Classification.IClassifier" />
        </member>
        <member name="F:Rollbar.Classification.Classifier.classifiersByID">
            <summary>
            The classifiers by identifier
            </summary>
        </member>
        <member name="M:Rollbar.Classification.Classifier.MatchClassifier(System.Object)">
            <summary>
            Matches the classifier.
            </summary>
            <param name="classifierObject">The classifier object.</param>
            <returns>Classifier.</returns>
        </member>
        <member name="M:Rollbar.Classification.Classifier.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.Classification.Classifier"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.Classification.Classifier.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Classification.Classifier"/> class.
            </summary>
            <param name="classifierObject">The classifier object.</param>
        </member>
        <member name="P:Rollbar.Classification.Classifier.ClassifierObject">
            <summary>
            Gets the classifier object.
            </summary>
            <value>The classifier object.</value>
        </member>
        <member name="P:Rollbar.Classification.Classifier.ClassifierType">
            <summary>
            Gets the type of the classifier.
            </summary>
            <value>The type of the classifier.</value>
        </member>
        <member name="P:Rollbar.Classification.Classifier.ID">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Rollbar.Classification.Classifier.Rollbar#Classification#Identifiable#ID">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Rollbar.Classification.Classifier.GetAllKnownIDs">
            <summary>
            Gets all known IDs.
            </summary>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
            <value>All known IDs.</value>
        </member>
        <member name="M:Rollbar.Classification.Classifier.Rollbar#Classification#Identifiable#GetAllKnownIDs">
            <summary>
            Gets all known IDs.
            </summary>
            <returns>IEnumerable&lt;System.Object&gt;.</returns>
            <value>All known IDs.</value>
        </member>
        <member name="M:Rollbar.Classification.Classifier.GenerateClassifierID(System.Object)">
            <summary>
            Generates the classifier identifier.
            </summary>
            <param name="classifierObject">The classifier object.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Rollbar.Classification.IClassification">
            <summary>
            Interface IClassification
            Implements the <see cref="!:Rollbar.Classification.Identifiable&lt;System.String&gt;" />
            </summary>
            <seealso cref="!:Rollbar.Classification.Identifiable&lt;System.String&gt;" />
        </member>
        <member name="P:Rollbar.Classification.IClassification.ClassifiersCount">
            <summary>
            Gets the classifiers count.
            </summary>
            <value>The classifiers count.</value>
        </member>
        <member name="P:Rollbar.Classification.IClassification.Classifiers">
            <summary>
            Gets the classifiers.
            </summary>
            <value>The classifiers.</value>
        </member>
        <member name="P:Rollbar.Classification.IClassification.ClassifierTypes">
            <summary>
            Gets the classifier types.
            </summary>
            <value>The classifier types.</value>
        </member>
        <member name="T:Rollbar.Classification.IClassifier">
            <summary>
            Interface IClassifier
            Implements the <see cref="!:Rollbar.Classification.Identifiable&lt;System.String&gt;" />
            </summary>
            <seealso cref="!:Rollbar.Classification.Identifiable&lt;System.String&gt;" />
        </member>
        <member name="P:Rollbar.Classification.IClassifier.ClassifierType">
            <summary>
            Gets the type of the classifier.
            </summary>
            <value>The type of the classifier.</value>
        </member>
        <member name="P:Rollbar.Classification.IClassifier.ClassifierObject">
            <summary>
            Gets the classifier object.
            </summary>
            <value>The classifier object.</value>
        </member>
        <member name="T:Rollbar.Classification.Identifiable">
            <summary>
            Interface Identifiable
            </summary>
        </member>
        <member name="P:Rollbar.Classification.Identifiable.ID">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Rollbar.Classification.Identifiable.GetAllKnownIDs">
            <summary>
            Gets all known IDs.
            </summary>
            <value>All known IDs.</value>
        </member>
        <member name="T:Rollbar.Classification.Identifiable`1">
            <summary>
            Interface Identifiable
            Implements the <see cref="T:Rollbar.Classification.Identifiable" />
            </summary>
            <typeparam name="TID">The type of the identifier.</typeparam>
            <seealso cref="T:Rollbar.Classification.Identifiable" />
        </member>
        <member name="P:Rollbar.Classification.Identifiable`1.ID">
            <summary>
            Gets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Rollbar.Classification.Identifiable`1.GetAllKnownIDs">
            <summary>
            Gets all known IDs.
            </summary>
            <value>All known IDs.</value>
        </member>
        <member name="T:Rollbar.Common.DateTimeUtil">
            <summary>
            Utility class for date/time related conversions.
            </summary>
        </member>
        <member name="M:Rollbar.Common.DateTimeUtil.ConvertToUnixTimestampInMilliseconds(System.DateTime)">
            <summary>
            Converts to unix timestamp in milliseconds.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Common.DateTimeUtil.ConvertToUnixTimestampInSeconds(System.DateTime)">
            <summary>
            Converts to unix timestamp in seconds.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Common.DateTimeUtil.ConvertFromUnixTimestampInSeconds(System.Int64)">
            <summary>
            Converts from unix timestamp in seconds.
            </summary>
            <param name="unixTimestampInSeconds">The unix timestamp in seconds.</param>
            <returns>corresponding DateTimeOffset value</returns>
        </member>
        <member name="T:Rollbar.Common.DisposableAction">
            <summary>
            Models a disposable action that is guaranteed to be invoked 
            at least on disposal (if not explicitly invoked).
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Rollbar.Common.DisposableAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Common.DisposableAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Rollbar.Common.DisposableAction.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; 
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Rollbar.Common.DisposableAction.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Rollbar.Common.EmptyDisposable">
            <summary>
            Implements empty/no-op disposable singleton.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Rollbar.Common.EmptyDisposable.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.Common.EmptyDisposable"/> class from being created.
            </summary>
        </member>
        <member name="P:Rollbar.Common.EmptyDisposable.Instance">
            <summary>
            Gets the singleton-like IRollbar instance.
            </summary>
            <value>
            The single shared IRollbar instance.
            </value>
        </member>
        <member name="M:Rollbar.Common.EmptyDisposable.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Rollbar.Common.HttpClientUtil">
            <summary>
            HttpClient utility class.
            </summary>
        </member>
        <member name="M:Rollbar.Common.HttpClientUtil.CreateHttpClient(System.String,System.String,System.String)">
            <summary>
            Creates the HTTP client.
            </summary>
            <param name="proxyAddress">The proxy settings.</param>
            <param name="proxyUsername">The proxy username.</param>
            <param name="proxyPassword">The proxy password.</param>
            <returns>HttpClient.</returns>
        </member>
        <member name="T:Rollbar.Common.IpAddressUtility">
            <summary>
            A utility class aiding in working with IP addresses.
            </summary>
        </member>
        <member name="M:Rollbar.Common.IpAddressUtility.Anonymize(System.String)">
            <summary>
            Anonymizes the given IP address.
            </summary>
            <param name="exactIpAddress">The specified IP address to anonymize.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.Common.IReconfigurable`1">
            <summary>
            Defines generic IReconfigurable interface.
            
            Any type that supports its own reconfiguration based on a provided original
            configuration should implement this interface.
            </summary>
            <typeparam name="T">A type that supports its reconfiguration.</typeparam>
        </member>
        <member name="M:Rollbar.Common.IReconfigurable`1.Reconfigure(`0)">
            <summary>
            Reconfigures this object similar to the specified one.
            </summary>
            <param name="likeMe">
            The pre-configured instance to be cloned in terms of its configuration/settings.
            </param>
            <returns>Reconfigured instance.</returns>
        </member>
        <member name="E:Rollbar.Common.IReconfigurable`1.Reconfigured">
            <summary>
            Occurs when this instance reconfigured.
            </summary>
        </member>
        <member name="T:Rollbar.Common.IReconfigurable`2">
            <summary>
            Defines generic IReconfigurable interface.
            
            Any type that supports its own reconfiguration based on a provided original
            base configuration should implement this interface.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TBase">The type of the base.</typeparam>
        </member>
        <member name="M:Rollbar.Common.IReconfigurable`2.Reconfigure(`1)">
            <summary>
            Reconfigures this object similar to the specified one.
            </summary>
            <param name="likeMe">
            The pre-configured instance to be cloned in terms of its configuration/settings.
            </param>
            <returns>Reconfigured instance.</returns>
        </member>
        <member name="E:Rollbar.Common.IReconfigurable`2.Reconfigured">
            <summary>
            Occurs when this instance reconfigured.
            </summary>
        </member>
        <member name="T:Rollbar.Common.ReconfigurableBase`1">
            <summary>
            An abstract base for implementing IReconfigurable types.
            </summary>
            <typeparam name="T">A type that supports its reconfiguration.</typeparam>
            <seealso cref="T:Rollbar.Common.IReconfigurable`1" />
        </member>
        <member name="M:Rollbar.Common.ReconfigurableBase`1.Reconfigure(`0)">
            <summary>
            Reconfigures this object similar to the specified one.
            </summary>
            <param name="likeMe">The pre-configured instance to be cloned in terms of its configuration/settings.</param>
            <returns>
            Reconfigured instance.
            </returns>
        </member>
        <member name="E:Rollbar.Common.ReconfigurableBase`1.Reconfigured">
            <summary>
            Occurs when this instance reconfigured.
            </summary>
        </member>
        <member name="M:Rollbar.Common.ReconfigurableBase`1.OnReconfigured(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Reconfigured" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rollbar.Common.ReconfigurableBase`2">
            <summary>
            An abstract base for implementing IReconfigurable (based on a base type) types.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TBase">The type of the base.</typeparam>
            <seealso cref="T:Rollbar.Common.IReconfigurable`1" />
        </member>
        <member name="M:Rollbar.Common.ReconfigurableBase`2.Reconfigure(`1)">
            <summary>
            Reconfigures this object similar to the specified one.
            </summary>
            <param name="likeMe">The pre-configured instance to be cloned in terms of its configuration/settings.</param>
            <returns>
            Reconfigured instance.
            </returns>
        </member>
        <member name="E:Rollbar.Common.ReconfigurableBase`2.Reconfigured">
            <summary>
            Occurs when this instance reconfigured.
            </summary>
        </member>
        <member name="M:Rollbar.Common.ReconfigurableBase`2.OnReconfigured(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Reconfigured" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rollbar.Common.StringUtility">
            <summary>
            A utility type aiding in string manipulations.
            </summary>
        </member>
        <member name="M:Rollbar.Common.StringUtility.Combine(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Combines the specified substrings using the specified separator.
            </summary>
            <param name="substrings">The substrings.</param>
            <param name="substringSeparator">The substring separator.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Common.StringUtility.GetEncodingBytes(System.String,System.Text.Encoding)">
            <summary>
            Gets the encoding bytes.
            </summary>
            <param name="input">The input.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Common.StringUtility.CalculateMaxEncodingBytes(System.String,System.Text.Encoding)">
            <summary>
            Calculates the maximum encoding bytes.
            </summary>
            <param name="input">The input.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Common.StringUtility.CalculateExactEncodingBytes(System.String,System.Text.Encoding)">
            <summary>
            Calculates the exact encoding bytes.
            </summary>
            <param name="input">The input.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Common.StringUtility.Truncate(System.String,System.Text.Encoding,System.Int32)">
            <summary>
            Truncates the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="encoding">The encoding.</param>
            <param name="encodedBytesLimit">The encoded bytes limit.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.CommunicationErrorEventArgs">
            <summary>
            Models a communication error event.
            </summary>
            <seealso cref="T:Rollbar.RollbarEventArgs" />
        </member>
        <member name="P:Rollbar.CommunicationErrorEventArgs.Error">
            <summary>
            Gets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Rollbar.CommunicationErrorEventArgs.RetriesLeft">
            <summary>
            Gets the retries left.
            </summary>
            <value>
            The retries left.
            </value>
        </member>
        <member name="M:Rollbar.CommunicationErrorEventArgs.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.CommunicationEventArgs">
            <summary>
            Models a communication event.
            </summary>
            <seealso cref="T:Rollbar.RollbarEventArgs" />
        </member>
        <member name="P:Rollbar.CommunicationEventArgs.Response">
            <summary>
            Gets the response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="M:Rollbar.CommunicationEventArgs.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.Deploys.Deploy">
            <summary>
            Models a deploy data record.
            </summary>
            <seealso cref="T:Rollbar.Deploys.IDeployment" />
        </member>
        <member name="P:Rollbar.Deploys.Deploy.DeployID">
            <summary>
            Gets or sets the deploy identifier.
            </summary>
            <value>
            The deploy identifier.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.ProjectID">
            <summary>
            Gets or sets the project identifier.
            </summary>
            <value>
            The project identifier.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.Revision">
            <summary>
            Gets the revision.
            </summary>
            <value>
            The revision.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.LocalUsername">
            <summary>
            Gets the local username.
            </summary>
            <value>
            The local username.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.RollbarUsername">
            <summary>
            Gets the rollbar username.
            </summary>
            <value>
            The rollbar username.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.StartTime">
            <summary>
            Gets or sets the start time.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.EndTime">
            <summary>
            Gets or sets the end time.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.Rollbar#Deploys#IDeploymentDetails#StartTime">
            <summary>
            Gets the start time.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deploy.Rollbar#Deploys#IDeploymentDetails#EndTime">
            <summary>
            Gets the end time.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.Deployment">
            <summary>
            Models data used for registering a deployment instance.
            </summary>
        </member>
        <member name="M:Rollbar.Deploys.Deployment.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.Deploys.Deployment"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.Deploys.Deployment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Deploys.Deployment"/> class.
            </summary>
            <param name="environment">The environment.</param>
            <param name="revision">The revision.</param>
        </member>
        <member name="M:Rollbar.Deploys.Deployment.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Deploys.Deployment"/> class.
            </summary>
            <param name="writeAccessToken">The write access token.</param>
            <param name="environment">The environment.</param>
            <param name="revision">The revision.</param>
        </member>
        <member name="P:Rollbar.Deploys.Deployment.WriteAccessToken">
            <summary>
            Gets the write access token.
            </summary>
            <value>
            The write access token.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deployment.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deployment.Revision">
            <summary>
            Gets the revision.
            </summary>
            <value>
            The revision.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deployment.RollbarUsername">
            <summary>
            Gets the rollbar username.
            </summary>
            <value>
            The rollbar username.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deployment.LocalUsername">
            <summary>
            Gets the local username.
            </summary>
            <value>
            The local username.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.Deployment.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.DeployResponse">
            <summary>
            Models a deploy query response.
            </summary>
            <seealso cref="T:Rollbar.Deploys.ResponseBase" />
        </member>
        <member name="P:Rollbar.Deploys.DeployResponse.Deploy">
            <summary>
            Gets or sets the deploy.
            </summary>
            <value>
            The deploy.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.DeploysPage">
            <summary>
            Models a deploys page.
            </summary>
        </member>
        <member name="P:Rollbar.Deploys.DeploysPage.PageNumber">
            <summary>
            Gets or sets the page number.
            </summary>
            <value>
            The page number.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.DeploysPage.Deploys">
            <summary>
            Gets or sets the deploys.
            </summary>
            <value>
            The deploys.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.DeploysPageResponse">
            <summary>
            Models deploys page query response.
            </summary>
            <seealso cref="T:Rollbar.Deploys.ResponseBase" />
        </member>
        <member name="P:Rollbar.Deploys.DeploysPageResponse.DeploysPage">
            <summary>
            Gets or sets the deploys page.
            </summary>
            <value>
            The deploys page.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.ErrorResponse">
            <summary>
            Models an error-like response.
            </summary>
            <seealso cref="T:Rollbar.Deploys.ResponseBase" />
        </member>
        <member name="P:Rollbar.Deploys.ErrorResponse.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.IDeployment">
            <summary>
            Models deployment related information/data interface. 
            </summary>
        </member>
        <member name="P:Rollbar.Deploys.IDeployment.Revision">
            <summary>
            Gets the revision.
            </summary>
            <value>
            The revision.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeployment.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeployment.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeployment.LocalUsername">
            <summary>
            Gets the local username.
            </summary>
            <value>
            The local username.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeployment.RollbarUsername">
            <summary>
            Gets the rollbar username.
            </summary>
            <value>
            The rollbar username.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.IDeploymentDetails">
            <summary>
            Defines a deployment details/data interface
            </summary>
            <seealso cref="T:Rollbar.Deploys.IDeployment" />
        </member>
        <member name="P:Rollbar.Deploys.IDeploymentDetails.DeployID">
            <summary>
            Gets the deploy identifier.
            </summary>
            <value>
            The deploy identifier.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeploymentDetails.ProjectID">
            <summary>
            Gets the project identifier.
            </summary>
            <value>
            The project identifier.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeploymentDetails.StartTime">
            <summary>
            Gets the start time.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:Rollbar.Deploys.IDeploymentDetails.EndTime">
            <summary>
            Gets the end time.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="T:Rollbar.Deploys.IRollbarDeploysManager">
            <summary>
            Defines the Rollbar Deploy Manager's interface.
            </summary>
        </member>
        <member name="M:Rollbar.Deploys.IRollbarDeploysManager.RegisterAsync(Rollbar.Deploys.IDeployment)">
            <summary>
            Registers the deployment asynchronously.
            </summary>
            <param name="deployment">The deployment.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Deploys.IRollbarDeploysManager.GetDeploymentAsync(System.String)">
            <summary>
            Gets the deployment asynchronously.
            </summary>
            <param name="deploymentID">The deployment identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Deploys.IRollbarDeploysManager.GetDeploymentsPageAsync(System.String,System.Int32)">
            <summary>
            Gets the deployments page asynchronously.
            </summary>
            <param name="environment">The environment.</param>
            <param name="pageNumber">The page number.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.Deploys.ResponseBase">
            <summary>
            Models the response abstraction.
            </summary>
        </member>
        <member name="P:Rollbar.Deploys.ResponseBase.ErrorCode">
            <summary>
            Gets or sets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeployClient.PostAsync(Rollbar.Deploys.IDeployment)">
            <summary>
            Posts the specified deployment asynchronously.
            </summary>
            <param name="deployment">The deployment.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeployClient.GetDeploymentAsync(System.String,System.String)">
            <summary>
            Gets the deployment asynchronous.
            </summary>
            <param name="readAccessToken">The read access token.</param>
            <param name="deploymentID">The deployment identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeployClient.GetDeploymentsAsync(System.String,System.Int32)">
            <summary>
            Gets the deployments asynchronous.
            </summary>
            <param name="readAccessToken">The read access token.</param>
            <param name="pageNumber">The page number.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.Deploys.RollbarDeploysManager">
            <summary>
            Implements IRollbarDeploysManager.
            </summary>
            <seealso cref="T:Rollbar.Deploys.IRollbarDeploysManager" />
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeploysManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Deploys.RollbarDeploysManager"/> class.
            </summary>
            <param name="writeAccessToken">The write access token.</param>
            <param name="readAccessToken">The read access token.</param>
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeploysManager.RegisterAsync(Rollbar.Deploys.IDeployment)">
            <summary>
            Registers the deployment asynchronously.
            </summary>
            <param name="deployment">The deployment.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeploysManager.GetDeploymentAsync(System.String)">
            <summary>
            Gets the deployment asynchronously.
            </summary>
            <param name="deploymentID">The deployment identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Deploys.RollbarDeploysManager.GetDeploymentsPageAsync(System.String,System.Int32)">
            <summary>
            Gets the deployments page asynchronously.
            </summary>
            <param name="environment">The environment.</param>
            <param name="pageNumber">The page number.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.Diagnostics.Assumption">
            <summary>
            Utility class aiding in validating assumptions about arguments and their values.
            </summary>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.FailValidation(System.String,System.String)">
            <summary>
            Fails the validation.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="argumentName">Name of the argument.</param>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertIsInterface``1">
            <summary>
            Asserts the  generic type parameter as an interface.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertTrue(System.Boolean,System.String)">
            <summary>
            Asserts the true.
            </summary>
            <param name="testedValue">if set to <c>true</c> [tested value].</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertFalse(System.Boolean,System.String)">
            <summary>
            Asserts the false.
            </summary>
            <param name="testedValue">if set to <c>true</c> [tested value].</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotEqual``1(``0,``0,System.String)">
            <summary>
            Asserts the not equal.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="testedValue">The tested value.</param>
            <param name="compareToValue">The compare to value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertEqual``1(``0,``0,System.String)">
            <summary>
            Asserts the equal.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="testedValue">The tested value.</param>
            <param name="compareToValue">The compare to value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotNull``1(``0,System.String)">
            <summary>
            Utility class for validating method parameters.
            </summary>
            		/// <summary>
            Ensures the specified value is not null.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The value to test.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The specified value.</returns>
            <example>
            public UIElementAdapter(UIElement uiElement)
            {
            	this.uiElement = Assumption.AssertNotNull(uiElement, "uiElement");	
            }
            </example>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Ensures the specified value is not <code>null</code> or empty (a zero length string).
            </summary>
            <param name="value">The value to test.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The specified value.</returns>
            <example>
            public DoSomething(string message)
            {
            	this.message = Assumption.AssertNotNullOrEmpty(message, "message");	
            }
            </example>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotNullOrEmpty(System.Collections.IEnumerable,System.String)">
            <summary>
            Ensures the specified value is not <code>null</code> or empty enumerable.
            </summary>
            <param name="value">The value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The specified value.</returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertEqual(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Asserts the equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Ensures the specified value is not <code>null</code> 
            or white space.
            </summary>
            <param name="value">The value to test.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The specified value.</returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotEmpty(System.Guid,System.String)">
            <summary>
            Asserts that the specified value is not an empty guid.
            </summary>
            <param name="value">The value to test.</param>
            <param name="parameterName">The name of the member.</param>
            <returns>The specified value.</returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertGreaterThan(System.Int32,System.Int32,System.String)">
            <summary>
            Asserts that the specified value is greater
            than the specified expected value.
            </summary>
            <param name="value">The value to test.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">The name of the member.</param>
            <returns>
            The specified value.
            </returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertGreaterThan(System.Double,System.Double,System.String)">
            <summary>
            Asserts the greater than.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertGreaterThan(System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary>
            Asserts the greater than.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertGreaterThanOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Asserts the greater than or equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertGreaterThanOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Asserts the greater than or equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertGreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary>
            Asserts the greater than or equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertLessThan(System.Int32,System.Int32,System.String)">
            <summary>
            Asserts the less than.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertLessThan(System.Double,System.Double,System.String)">
            <summary>
            Asserts the less than.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertLessThan(System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary>
            Asserts the less than.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertLessThanOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Asserts the less than or equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertLessThanOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Asserts the less than or equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertLessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset,System.String)">
            <summary>
            Asserts the less than or equal.
            </summary>
            <param name="value">The value.</param>
            <param name="expectedValue">The expected value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.Assumption.AssertNotNullAndOfType``1(System.Object,System.String)">
            <summary>
            Ensures the specified value is not <code>null</code> 
            and that it is of the specified type.
            </summary>
            <param name="value">The value to test.</param> 
            <param name="parameterName">The name of the parameter.</param>
            <returns>The value to test.</returns>
            <example>
            public DoSomething(object message)
            {
            	this.message = Assumption.AssertNotNullAndOfType&lt;string&gt;(message, "message");	
            }
            </example>
        </member>
        <member name="T:Rollbar.Diagnostics.RuntimeEnvironmentUtility">
            <summary>
            A utility class aiding discovery of the current runtime environment.
            </summary>
        </member>
        <member name="M:Rollbar.Diagnostics.RuntimeEnvironmentUtility.GetTypeAssemblyVersion(System.Type)">
            <summary>
            Gets the type assembly version.
            </summary>
            <param name="theType">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.RuntimeEnvironmentUtility.GetAssemblyTargetFrameworks(System.Type)">
            <summary>
            Gets the assembly target frameworks.
            </summary>
            <param name="typeFromAssembly">The type from assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.RuntimeEnvironmentUtility.GetAssemblyTargetFrameworks(System.Reflection.Assembly)">
            <summary>
            Gets the assembly target frameworks.
            </summary>
            <param name="theAssembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.RuntimeEnvironmentUtility.GetOSDescription">
            <summary>
            Gets the OS description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Diagnostics.RuntimeEnvironmentUtility.GetCpuArchitecture">
            <summary>
            Gets the CPU architecture.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rollbar.DTOs.Body">
            <summary>
            Models Rollbar Body DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Body.#ctor(Rollbar.DTOs.Trace)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Body"/> class.
            </summary>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:Rollbar.DTOs.Body.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Body"/> class.
            </summary>
            <param name="exceptions">The exceptions.</param>
        </member>
        <member name="M:Rollbar.DTOs.Body.#ctor(System.AggregateException)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Body"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Rollbar.DTOs.Body.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Body"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Rollbar.DTOs.Body.#ctor(Rollbar.DTOs.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Body"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Rollbar.DTOs.Body.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Body"/> class.
            </summary>
            <param name="crashReport">The crash report.</param>
        </member>
        <member name="P:Rollbar.DTOs.Body.Telemetry">
            <summary>
            Gets the optional telemetry.
            </summary>
            <value>
            The telemetry.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Body.Trace">
            <summary>
            Gets the trace.
            </summary>
            <value>
            The trace.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Body.TraceChain">
            <summary>
            Gets the trace chain.
            </summary>
            <value>
            The trace chain.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Body.Message">
            <summary>
            Gets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Body.CrashReport">
            <summary>
            Gets the crash report.
            </summary>
            <value>
            The crash report.
            </value>
        </member>
        <member name="M:Rollbar.DTOs.Body.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.Client">
            <summary>
            Models Rollbar Client DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Client"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Client.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Client"/> class.
            </summary>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="T:Rollbar.DTOs.Client.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.CodeContext">
            <summary>
            Models Rollbar CodeContext DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="P:Rollbar.DTOs.CodeContext.Pre">
            <summary>
            Gets or sets the pre-code-context.
            </summary>
            <value>
            The pre-code-context.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.CodeContext.Post">
            <summary>
            Gets or sets the post-code-context.
            </summary>
            <value>
            The post-code-context.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.CrashReport">
            <summary>
            Models Rollbar CrashReport DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.CrashReport.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.CrashReport"/> class.
            </summary>
            <param name="report">The report.</param>
        </member>
        <member name="P:Rollbar.DTOs.CrashReport.Raw">
            <summary>
            Gets the raw.
            </summary>
            <value>
            The raw.
            </value>
        </member>
        <member name="M:Rollbar.DTOs.CrashReport.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.Data">
            <summary>
            Models Rollbar Data DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="P:Rollbar.DTOs.Data.DefaultPlatform">
            <summary>
            Gets or sets the default platform.
            </summary>
            <value>
            The default platform.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.DefaultLanguage">
            <summary>
            Gets or sets the default language.
            </summary>
            <value>
            The default language.
            </value>
        </member>
        <member name="M:Rollbar.DTOs.Data.#ctor(Rollbar.IRollbarConfig,Rollbar.DTOs.Body,System.Collections.Generic.IDictionary{System.String,System.Object},Rollbar.DTOs.Request)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Data" /> class.
            </summary>
            <param name="config">The configuration.</param>
            <param name="body">The body.</param>
            <param name="custom">The custom.</param>
            <param name="request">The request.</param>
        </member>
        <member name="P:Rollbar.DTOs.Data.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Body">
            <summary>
            Gets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.CodeVersion">
            <summary>
            Gets or sets the code version.
            </summary>
            <value>
            The code version.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Platform">
            <summary>
            Gets or sets the platform.
            </summary>
            <value>
            The platform.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Framework">
            <summary>
            Gets or sets the framework.
            </summary>
            <value>
            The framework.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Request">
            <summary>
            Gets or sets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Person">
            <summary>
            Gets or sets the person.
            </summary>
            <value>
            The person.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Server">
            <summary>
            Gets or sets the server.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Custom">
            <summary>
            Gets or sets the custom.
            </summary>
            <value>
            The custom.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Fingerprint">
            <summary>
            Gets or sets the fingerprint.
            </summary>
            <value>
            The fingerprint.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Uuid">
            <summary>
            Gets or sets the UUID.
            </summary>
            <value>
            The UUID.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.GuidUuid">
            <summary>
            Gets or sets the unique identifier UUID.
            </summary>
            <value>
            The unique identifier UUID.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Data.Notifier">
            <summary>
            Gets the notifier.
            </summary>
            <value>
            The notifier.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.DomTelemetry">
            <summary>
            Implements DOM telemetry body.
            </summary>
            <seealso cref="T:Rollbar.DTOs.TelemetryBody" />
        </member>
        <member name="T:Rollbar.DTOs.DomTelemetry.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.DomTelemetry.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.DomTelemetry"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.DomTelemetry.Element">
            <summary>
            Gets the element.
            </summary>
            <value>
            The element.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.DtoBase">
            <summary>
            Implements an abstract DTO type base.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.DtoBase.TruncateStrings(System.Text.Encoding,System.Int32)">
            <summary>
            Truncates the strings.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="stringBytesLimit">The string bytes limit.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.DTOs.DtoBase.TruncateStringValues(System.Collections.Generic.IDictionary{System.String,System.Object},System.Text.Encoding,System.Int32)">
            <summary>
            Truncates the string values.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="encoding">The encoding.</param>
            <param name="stringBytesLimit">The string bytes limit.</param>
        </member>
        <member name="M:Rollbar.DTOs.DtoBase.TruncateStringValues(System.Collections.Generic.IDictionary{System.String,System.String},System.Text.Encoding,System.Int32)">
            <summary>
            Truncates the string values.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="encoding">The encoding.</param>
            <param name="stringBytesLimit">The string bytes limit.</param>
        </member>
        <member name="M:Rollbar.DTOs.DtoBase.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.DtoBase.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.ErrorTelemetry">
            <summary>
            Implements error telemetry body
            </summary>
            <seealso cref="T:Rollbar.DTOs.LogTelemetry" />
        </member>
        <member name="M:Rollbar.DTOs.ErrorTelemetry.#ctor(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.ErrorTelemetry"/> class.
            </summary>
            <param name="exception">The exception.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="T:Rollbar.DTOs.Exception">
            <summary>
            Models Rollbar Exception DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Exception"/> class.
            </summary>
            <param name="class">The class.</param>
        </member>
        <member name="M:Rollbar.DTOs.Exception.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Exception"/> class.
            </summary>
            <param name="class">The class.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Rollbar.DTOs.Exception.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Exception" /> class.
            </summary>
            <param name="class">The class.</param>
            <param name="message">The message.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Rollbar.DTOs.Exception.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Exception"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Rollbar.DTOs.Exception.Class">
            <summary>
            Gets the class.
            </summary>
            <value>
            The class.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Exception.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Exception.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.ExtendableDtoBase">
            <summary>
            Implements an abstract base for defining expendable DTO types.
            These types of DTOs can be extended with arbitrary extra 
            key-value pairs as needed.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
            <seealso cref="!:System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String, System.Object&gt;&gt;" />
            <seealso cref="!:System.Collections.Generic.IDictionary&lt;System.String, System.Object&gt;" />
        </member>
        <member name="F:Rollbar.DTOs.ExtendableDtoBase._keyedValues">
            <summary>
            The keyed values
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.ExtendableDtoBase"/> class.
            </summary>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.ExtendableDtoBase.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Rollbar.DTOs.ExtendableDtoBase.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> 
            containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
        </member>
        <member name="P:Rollbar.DTOs.ExtendableDtoBase.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> 
            containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
        </member>
        <member name="P:Rollbar.DTOs.ExtendableDtoBase.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
        </member>
        <member name="P:Rollbar.DTOs.ExtendableDtoBase.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> 
            is read-only.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">
            The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </param>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> 
            contains a specific value.
            </summary>
            <param name="item">
            The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </param>
            <returns>
            true if <paramref name="item">item</paramref> is found in 
            the <see cref="T:System.Collections.Generic.ICollection`1"></see>; 
            otherwise, false.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"></see> 
            contains an element with the specified key.
            </summary>
            <param name="key">
            The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"></see> 
            contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> 
            to an <see cref="T:System.Array"></see>, starting at a particular 
            <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"></see> that is the destination of 
            the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. 
            The <see cref="T:System.Array"></see> must have zero-based indexing.
            </param>
            <param name="arrayIndex">
            The zero-based index in array at which copying begins.
            </param>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Remove(System.String)">
            <summary>
            Removes the element with the specified key from 
            the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; 
            otherwise, false.  
            This method also returns false if <paramref name="key">key</paramref> was not found 
            in the original <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from 
            the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">
            The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </param>
            <returns>
            true if <paramref name="item">item</paramref> was successfully removed from 
            the <see cref="T:System.Collections.Generic.ICollection`1"></see>; 
            otherwise, false. 
            This method also returns false if <paramref name="item">item</paramref> is not found 
            in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, 
            if the key is found; otherwise, the default value 
            for the type of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            true if the object that implements 
            <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains 
            an element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object 
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.Extend(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Extends this instance with the specified extra key-value pairs.
            </summary>
            <param name="extraProperties">The extra key-value pairs.</param>
        </member>
        <member name="M:Rollbar.DTOs.ExtendableDtoBase.TruncateStrings(System.Text.Encoding,System.Int32)">
            <summary>
            Truncates the strings.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="stringBytesLimit">The string bytes limit.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.DTOs.Frame">
            <summary>
            Models Rollbar Frame DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Frame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Frame"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Frame.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Frame" /> class.
            </summary>
            <param name="frameString">The frame string.</param>
        </member>
        <member name="M:Rollbar.DTOs.Frame.#ctor(System.Diagnostics.StackFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Frame"/> class.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="P:Rollbar.DTOs.Frame.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.LineNo">
            <summary>
            Gets or sets the line number.
            </summary>
            <value>
            The line number.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.ColNo">
            <summary>
            Gets or sets the column number.
            </summary>
            <value>
            The column number.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Frame.Kwargs">
            <summary>
            Gets or sets the kwargs.
            </summary>
            <value>
            The kwargs.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.HostBase">
            <summary>
            Abstract base for creating host data elements (like Server or Client)
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="T:Rollbar.DTOs.HostBase.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.HostBase.ReservedProperties.Cpu">
            <summary>
            The CPU architecture
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.HostBase.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.DTOs.HostBase"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.HostBase.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.HostBase"/> class.
            </summary>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.HostBase.Cpu">
            <summary>
            Gets or sets the CPU architecture.
            </summary>
            <value>
            The CPU architecture.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.LogTelemetry">
            <summary>
            Implements log telemetry body.
            </summary>
            <seealso cref="T:Rollbar.DTOs.TelemetryBody" />
        </member>
        <member name="T:Rollbar.DTOs.LogTelemetry.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.LogTelemetry.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.LogTelemetry"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="M:Rollbar.DTOs.LogTelemetry.#ctor(Rollbar.DTOs.TelemetryType,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.LogTelemetry"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="message">The message.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.LogTelemetry.Message">
            <summary>
            Gets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.ManualTelemetry">
            <summary>
            Implements manual/custom telemetry body
            </summary>
            <seealso cref="T:Rollbar.DTOs.TelemetryBody" />
        </member>
        <member name="M:Rollbar.DTOs.ManualTelemetry.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.ManualTelemetry"/> class.
            </summary>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="T:Rollbar.DTOs.Message">
            <summary>
            Models Rollbar Message DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="T:Rollbar.DTOs.Message.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Message.ReservedProperties.Body">
            <summary>
            The body
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Message.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Message"/> class.
            </summary>
            <param name="body">The body.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.Message.Body">
            <summary>
            Gets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="M:Rollbar.DTOs.Message.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.NavigationTelemetry">
            <summary>
            Implements navigation telemetry body.
            </summary>
            <seealso cref="T:Rollbar.DTOs.TelemetryBody" />
        </member>
        <member name="T:Rollbar.DTOs.NavigationTelemetry.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.NavigationTelemetry.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.NavigationTelemetry"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.NavigationTelemetry.From">
            <summary>
            Gets navigation-from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.NavigationTelemetry.To">
            <summary>
            Gets navigation-to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.NetworkTelemetry">
            <summary>
            Implements network tlemetry body.
            </summary>
            <seealso cref="T:Rollbar.DTOs.TelemetryBody" />
        </member>
        <member name="T:Rollbar.DTOs.NetworkTelemetry.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.NetworkTelemetry.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.NetworkTelemetry" /> class.
            </summary>
            <param name="method">The method.</param>
            <param name="url">The URL.</param>
            <param name="eventStart">The event start.</param>
            <param name="eventEnd">The event end.</param>
            <param name="statusCode">The status code.</param>
            <param name="subtype">The subtype.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="M:Rollbar.DTOs.NetworkTelemetry.FinalizeEvent">
            <summary>
            Finalizes the event.
            </summary>
        </member>
        <member name="P:Rollbar.DTOs.NetworkTelemetry.Subtype">
            <summary>
            Gets the subtype.
            </summary>
            <value>
            The subtype.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.NetworkTelemetry.Method">
            <summary>
            Gets the method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.NetworkTelemetry.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.NetworkTelemetry.StatusCode">
            <summary>
            Gets the status code.
            </summary>
            <value>
            The status code.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.NetworkTelemetry.StartTimestamp">
            <summary>
            Gets the start timestamp.
            </summary>
            <value>
            The start timestamp.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.NetworkTelemetry.EndTimestamp">
            <summary>
            Gets the end timestamp.
            </summary>
            <value>
            The end timestamp.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.Payload">
            <summary>
            Models Rollbar Payload DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Payload.#ctor(System.String,Rollbar.DTOs.Data,System.Nullable{System.DateTime},System.Threading.SemaphoreSlim)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Payload" /> class.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="data">The data.</param>
            <param name="timeoutAt">The timeout at.</param>
            <param name="signal">The signal.</param>
        </member>
        <member name="P:Rollbar.DTOs.Payload.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Payload.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Rollbar.DTOs.Payload.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.Person">
            <summary>
            Models Rollbar Person DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Person.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Person"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Person.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Person"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="P:Rollbar.DTOs.Person.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Person.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Person.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.Request">
            <summary>
            Models Rollbar Request DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Request.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Request"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Request.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},Rollbar.IRollbarConfig,System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Request" /> class.
            </summary>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
            <param name="rollbarConfig">The rollbar configuration.</param>
            <param name="httpRequest">The HTTP request.</param>
        </member>
        <member name="T:Rollbar.DTOs.Request.ReservedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.Url">
            <summary>
            The URL
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.Method">
            <summary>
            The method
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.Headers">
            <summary>
            The headers
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.Params">
            <summary>
            The parameters
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.GetParams">
            <summary>
            The get-parameters
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.QueryString">
            <summary>
            The query string
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.PostParams">
            <summary>
            The post-parameters
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.PostBody">
            <summary>
            The post body
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Request.ReservedProperties.UserIp">
            <summary>
            The user IP
            </summary>
        </member>
        <member name="P:Rollbar.DTOs.Request.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.Params">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.GetParams">
            <summary>
            Gets or sets the get-parameters.
            </summary>
            <value>
            The get-parameters.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.QueryString">
            <summary>
            Gets or sets the query string.
            </summary>
            <value>
            The query string.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.PostParams">
            <summary>
            Gets or sets the post-parameters.
            </summary>
            <value>
            The post-parameters.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.PostBody">
            <summary>
            Gets or sets the post-body.
            </summary>
            <value>
            The post-body.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Request.UserIp">
            <summary>
            Gets or sets the user IP.
            </summary>
            <value>
            The user IP.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.Server">
            <summary>
            Models Rollbar Server DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Server.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Server"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Server.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Server"/> class.
            </summary>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="T:Rollbar.DTOs.Server.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Server.ReservedProperties.Host">
            <summary>
            The host
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Server.ReservedProperties.Root">
            <summary>
            The root
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Server.ReservedProperties.Branch">
            <summary>
            The branch
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.Server.ReservedProperties.CodeVersion">
            <summary>
            The code version
            </summary>
        </member>
        <member name="P:Rollbar.DTOs.Server.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Server.Root">
            <summary>
            Gets or sets the root.
            </summary>
            <value>
            The root.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Server.Branch">
            <summary>
            Gets or sets the branch.
            </summary>
            <value>
            The branch.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Server.CodeVersion">
            <summary>
            Gets or sets the code version.
            </summary>
            <value>
            The code version.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.Telemetry">
            <summary>
            IMplements Telemetry DTO
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="T:Rollbar.DTOs.Telemetry.ReservedProperties">
            <summary>
            The DTO reserved properties.
            </summary>
        </member>
        <member name="M:Rollbar.DTOs.Telemetry.#ctor(Rollbar.DTOs.TelemetrySource,Rollbar.DTOs.TelemetryLevel,Rollbar.DTOs.TelemetryBody,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Telemetry"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="level">The level.</param>
            <param name="body">The body.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.Telemetry.Level">
            <summary>
            Gets the level.
            </summary>
            <value>
            The level.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Telemetry.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Telemetry.Source">
            <summary>
            Gets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Telemetry.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Telemetry.Body">
            <summary>
            Gets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="M:Rollbar.DTOs.Telemetry.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.TelemetryBody">
            <summary>
            Base abstraction for implementing telemetry concrete bodies.
            </summary>
            <seealso cref="T:Rollbar.DTOs.ExtendableDtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.TelemetryBody.#ctor(Rollbar.DTOs.TelemetryType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.TelemetryBody"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="arbitraryKeyValuePairs">The arbitrary key value pairs.</param>
        </member>
        <member name="P:Rollbar.DTOs.TelemetryBody.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Rollbar.DTOs.TelemetryLevel">
            <summary>
            Enumerates supported telemetry levels.
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryLevel.Critical">
            <summary>
            The critical
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryLevel.Error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryLevel.Warning">
            <summary>
            The warning
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryLevel.Info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryLevel.Debug">
            <summary>
            The debug
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.TelemetrySource">
            <summary>
            Enumerates supported telemetry sources.
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetrySource.Server">
            <summary>
            The server
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetrySource.Client">
            <summary>
            The client
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.TelemetryType">
            <summary>
            Enumerates supported telemetry types.
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryType.Log">
            <summary>
            The log
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryType.Network">
            <summary>
            The network
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryType.Dom">
            <summary>
            The DOM
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryType.Navigation">
            <summary>
            The navigation
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryType.Error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:Rollbar.DTOs.TelemetryType.Manual">
            <summary>
            The manual
            </summary>
        </member>
        <member name="T:Rollbar.DTOs.Trace">
            <summary>
            Models Rollbar Trace DTO.
            </summary>
            <seealso cref="T:Rollbar.DTOs.DtoBase" />
        </member>
        <member name="M:Rollbar.DTOs.Trace.#ctor(Rollbar.DTOs.Frame[],Rollbar.DTOs.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Trace"/> class.
            </summary>
            <param name="frames">The frames.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Rollbar.DTOs.Trace.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.DTOs.Trace"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Rollbar.DTOs.Trace.Frames">
            <summary>
            Gets the frames.
            </summary>
            <value>
            The frames.
            </value>
        </member>
        <member name="P:Rollbar.DTOs.Trace.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="T:Rollbar.ErrorLevel">
            <summary>
            Lists all the supported Rollbar error levels.
            The members are ordered from least to most significant.
            </summary>
        </member>
        <member name="F:Rollbar.ErrorLevel.Debug">
            <summary>
            The debug log level.
            </summary>
        </member>
        <member name="F:Rollbar.ErrorLevel.Info">
            <summary>
            The informational log level.
            </summary>
        </member>
        <member name="F:Rollbar.ErrorLevel.Warning">
            <summary>
            The warning log level.
            </summary>
        </member>
        <member name="F:Rollbar.ErrorLevel.Error">
            <summary>
            The error log level.
            </summary>
        </member>
        <member name="F:Rollbar.ErrorLevel.Critical">
            <summary>
            The critical error/log level.
            </summary>
        </member>
        <member name="T:Rollbar.ILogger">
            <summary>
            
            Defines ILogger interface.
            
            NOTE: 
            
            All the logging methods of this interface imply asynchronous/non-blocking implementation.
            However, the interface defines the method (ILogger AsBlockingLogger(TimeSpan timeout))
            that returns a synchronous implementation of ILogger.
            This approach allows for easier code refactoring when switching between 
            asynchronous and synchronous uses of the logger.
            
            Normally, you would want to use asynchronous logging since it has virtually no instrumentational 
            overhead on your application execution performance at runtime. It has "fire and forget"
            approach to logging. However, in some specific situations, for example, while logging right before 
            exiting an application, you may want to use it synchronously so that the application
            does not quit before the logging completes.
            
            </summary>
        </member>
        <member name="M:Rollbar.ILogger.AsBlockingLogger(System.TimeSpan)">
            <summary>
            Returns blocking/synchronous implementation of this ILogger.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Log(Rollbar.DTOs.Data)">
            <summary>
            Logs the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Log(Rollbar.ErrorLevel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified level.
            </summary>
            <param name="level">The level.</param>
            <param name="obj">The object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Log(Rollbar.ErrorLevel,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified level.
            </summary>
            <param name="level">The level.</param>
            <param name="msg">The message.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Critical(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified message as critical.
            </summary>
            <param name="msg">The message.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Error(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified message as error.
            </summary>
            <param name="msg">The message.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Warning(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified message as warning.
            </summary>
            <param name="msg">The message.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Info(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified message as info.
            </summary>
            <param name="msg">The message.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Debug(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified message as debug.
            </summary>
            <param name="msg">The message.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Critical(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified error as critical.
            </summary>
            <param name="error">The error.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Error(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified error as error.
            </summary>
            <param name="error">The error.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Warning(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified error as warning.
            </summary>
            <param name="error">The error.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Info(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified error as info.
            </summary>
            <param name="error">The error.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Debug(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified error as debug.
            </summary>
            <param name="error">The error.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Critical(Rollbar.ITraceable,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as critical.
            </summary>
            <param name="traceableObj">The traceable object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Error(Rollbar.ITraceable,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as error.
            </summary>
            <param name="traceableObj">The traceable object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Warning(Rollbar.ITraceable,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as warning.
            </summary>
            <param name="traceableObj">The traceable object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Info(Rollbar.ITraceable,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as info.
            </summary>
            <param name="traceableObj">The traceable object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Debug(Rollbar.ITraceable,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as debug.
            </summary>
            <param name="traceableObj">The traceable object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Critical(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as critical.
            </summary>
            <param name="obj">The object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Error(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as error.
            </summary>
            <param name="obj">The object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Warning(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as warning.
            </summary>
            <param name="obj">The object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Info(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as info.
            </summary>
            <param name="obj">The object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.ILogger.Debug(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Logs the specified object as debug.
            </summary>
            <param name="obj">The object.</param>
            <param name="custom">The custom data.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.Instrumentation.InstrumentationCondition">
            <summary>
            Class InstrumentationCondition.
            </summary>
        </member>
        <member name="F:Rollbar.Instrumentation.InstrumentationCondition.Instrument">
            <summary>
            The instrument
            </summary>
        </member>
        <member name="T:Rollbar.Instrumentation.IPerformanceMonitor">
            <summary>
            Interface IPerformanceMonitor
            </summary>
        </member>
        <member name="M:Rollbar.Instrumentation.IPerformanceMonitor.Capture(System.TimeSpan,Rollbar.Classification.IClassification)">
            <summary>
            Captures the specified measured time.
            </summary>
            <param name="measuredTime">The measured time.</param>
            <param name="measurementClassification">The measurement classification.</param>
        </member>
        <member name="T:Rollbar.Instrumentation.PerformanceTimer">
            <summary>
            Class CodePerformanceTimer.
            Implements the <see cref="T:System.Attribute" />
            Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Rollbar.Instrumentation.PerformanceTimer._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Rollbar.Instrumentation.PerformanceTimer._performanceMonitor">
            <summary>
            The performance monitor
            </summary>
        </member>
        <member name="F:Rollbar.Instrumentation.PerformanceTimer._measurementClassification">
            <summary>
            The measurement classification
            </summary>
        </member>
        <member name="M:Rollbar.Instrumentation.PerformanceTimer.#ctor(Rollbar.Instrumentation.IPerformanceMonitor,Rollbar.Classification.IClassification)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Instrumentation.PerformanceTimer"/> class.
            </summary>
            <param name="performanceMonitor">The performance monitor.</param>
            <param name="measurementClassification">The measurement classification.</param>
        </member>
        <member name="M:Rollbar.Instrumentation.PerformanceTimer.StartNew(Rollbar.Instrumentation.IPerformanceMonitor,Rollbar.Classification.IClassification)">
            <summary>
            Creates new .
            </summary>
            <param name="performanceMonitor">The performance monitor.</param>
            <param name="measurementClassification">The measurement classification.</param>
            <returns>PerformanceTimer.</returns>
        </member>
        <member name="M:Rollbar.Instrumentation.PerformanceTimer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Rollbar.InternalErrorEventArgs">
            <summary>
            Models an internal event.
            </summary>
            <seealso cref="T:Rollbar.RollbarEventArgs" />
        </member>
        <member name="P:Rollbar.InternalErrorEventArgs.Error">
            <summary>
            Gets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Rollbar.InternalErrorEventArgs.Details">
            <summary>
            Gets the details.
            </summary>
            <value>
            The details.
            </value>
        </member>
        <member name="M:Rollbar.InternalErrorEventArgs.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.IpAddressCollectionPolicy">
            <summary>
            Enumerates all the applicable IP address collection policies.
            </summary>
        </member>
        <member name="F:Rollbar.IpAddressCollectionPolicy.Collect">
            <summary>
            Collect the IP address...
            </summary>
        </member>
        <member name="F:Rollbar.IpAddressCollectionPolicy.CollectAnonymized">
            <summary>
            Collect the IP address but anonymize it...
            </summary>
            <remarks>
            About IP Anonymization in Analytics, please, refer to:
            https://support.google.com/analytics/answer/2763052
            </remarks>
        </member>
        <member name="F:Rollbar.IpAddressCollectionPolicy.DoNotCollect">
            <summary>
            Do not collect the IP address
            </summary>
        </member>
        <member name="T:Rollbar.IRollbar">
            <summary>
            Defines IRollbar notifier interface.
            </summary>
            <seealso cref="T:Rollbar.ILogger" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Rollbar.IRollbar.Configure(Rollbar.IRollbarConfig)">
            <summary>
            Configures the using specified settings.
            </summary>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.IRollbar.Configure(System.String)">
            <summary>
            Configures using the specified access token.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns></returns>
        </member>
        <member name="P:Rollbar.IRollbar.Config">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Rollbar.IRollbar.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="E:Rollbar.IRollbar.InternalEvent">
            <summary>
            Occurs when a Rollbar internal event happens.
            </summary>
        </member>
        <member name="T:Rollbar.IRollbarConfig">
            <summary>
            Models Rollbar configuration interface.
            </summary>
        </member>
        <member name="P:Rollbar.IRollbarConfig.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.Environment">
            <summary>
            Gets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.EndPoint">
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.Enabled">
            <summary>
            Gets or sets the enabled flag.
            </summary>
            <value>
            The enabled.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.LogLevel">
            <summary>
            Gets or sets the log level.
            </summary>
            <value>
            The log level.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.ProxyAddress">
            <summary>
            Gets the proxy address.
            </summary>
            <value>
            The proxy address.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.ProxyUsername">
            <summary>
            Gets the proxy username.
            </summary>
            <value>The proxy username.</value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.ProxyPassword">
            <summary>
            Gets the proxy password.
            </summary>
            <value>The proxy password.</value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.MaxReportsPerMinute">
            <summary>
            Gets the maximum reports per minute.
            </summary>
            <value>
            The maximum reports per minute.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.ReportingQueueDepth">
            <summary>
            Gets the reporting queue depth.
            </summary>
            <value>
            The reporting queue depth.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.MaxItems">
            <summary>
            Gets the maximum items limit.
            </summary>
            <value>
            The maximum items.
            </value>
            <remarks>
            Max number of items to report per page load or per web request. 
            When this limit is reached, an additional item will be reported stating that the limit was reached. 
            Like MaxReportsPerMinute, this limit counts uncaught errors and any direct calls to Rollbar.log/debug/info/warning/error/critical().
            Default: 0 (no limit)
            </remarks>
        </member>
        <member name="P:Rollbar.IRollbarConfig.CaptureUncaughtExceptions">
            <summary>
            Gets a value indicating whether to auto-capture uncaught exceptions.
            </summary>
            <value>
              <c>true</c> if auto-capture uncaught exceptions is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.ScrubFields">
            <summary>
            Gets the scrub fields.
            </summary>
            <value>
            The scrub fields.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.ScrubWhitelistFields">
            <summary>
            Gets the scrub white-list fields.
            </summary>
            <value>
            The scrub white-list fields.
            </value>
            <remarks>
            The fields mentioned in this list are guaranteed to be excluded 
            from the ScrubFields list in cases when the lists overlap.
            </remarks>
        </member>
        <member name="P:Rollbar.IRollbarConfig.Transform">
            <summary>
            Gets the transform.
            </summary>
            <value>
            The transform.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.Truncate">
            <summary>
            Gets the truncate.
            </summary>
            <value>
            The truncate.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.CheckIgnore">
            <summary>
            Gets the check ignore.
            </summary>
            <value>
            The check ignore.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.Person">
            <summary>
            Gets or sets the person.
            </summary>
            <value>
            The person.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.Server">
            <summary>
            Gets or sets the server.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.PersonDataCollectionPolicies">
            <summary>
            Gets or sets the person data collection policies.
            </summary>
            <value>
            The person data collection policies.
            </value>
        </member>
        <member name="P:Rollbar.IRollbarConfig.IpAddressCollectionPolicy">
            <summary>
            Gets or sets the IP address collection policy.
            </summary>
            <value>
            The IP address collection policy.
            </value>
        </member>
        <member name="T:Rollbar.ITraceable">
            <summary>
            Defines an interface of a traceable object.
            </summary>
        </member>
        <member name="M:Rollbar.ITraceable.TraceAsString(System.String)">
            <summary>
            Traces as a string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>String rendering of this instance.</returns>
        </member>
        <member name="T:Rollbar.NetFramework.RollbarConfigSection">
            <summary>
            Implements Rollbar custom configuration section for .NET Framework only!
            </summary>
            <seealso cref="T:System.Configuration.ConfigurationSection" />
            <remarks>
            http://joelabrahamsson.com/creating-a-custom-configuration-section-in-net/
            https://msdn.microsoft.com/en-us/library/system.configuration.configurationsection.aspx
            https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationsection?view=netframework-4.7.1
            </remarks>
        </member>
        <member name="M:Rollbar.NetFramework.RollbarConfigSection.GetConfiguration">
            <summary>
            Gets the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.ScrubFields">
            <summary>
            Gets or sets the scrub fields.
            </summary>
            <value>
            The scrub fields.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.ScrubWhitelistFields">
            <summary>
            Gets or sets the scrub fields.
            </summary>
            <value>
            The scrub fields.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.LogLevel">
            <summary>
            Gets or sets the log level.
            </summary>
            <value>
            The log level.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.Enabled">
            <summary>
            Gets or sets the enabled.
            </summary>
            <value>
            The enabled.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.ProxyAddress">
            <summary>
            Gets or sets the proxy address.
            </summary>
            <value>
            The proxy address.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.ProxyUsername">
            <summary>
            Gets the proxy username.
            </summary>
            <value>The proxy username.</value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.ProxyPassword">
            <summary>
            Gets the proxy password.
            </summary>
            <value>The proxy password.</value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.MaxReportsPerMinute">
            <summary>
            Gets or sets the maximum reports per minute.
            </summary>
            <value>
            The maximum reports per minute.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.ReportingQueueDepth">
            <summary>
            Gets or sets the reporting queue depth.
            </summary>
            <value>
            The reporting queue depth.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.MaxItems">
            <summary>
            Gets the maximum items limit.
            </summary>
            <value>
            The maximum items.
            </value>
            <remarks>
            Max number of items to report per page load or per web request.
            When this limit is reached, an additional item will be reported stating that the limit was reached.
            Like MaxReportsPerMinute, this limit counts uncaught errors and any direct calls to Rollbar.log/debug/info/warning/error/critical().
            Default: 0 (no limit)
            </remarks>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.CaptureUncaughtExceptions">
            <summary>
            Gets a value indicating whether to auto-capture uncaught exceptions.
            </summary>
            <value>
              <c>true</c> if auto-capture uncaught exceptions is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.PersonDataCollectionPolicies">
            <summary>
            Gets the person data collection policies.
            </summary>
            <value>
            The person data collection policies.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarConfigSection.IpAddressCollectionPolicy">
            <summary>
            Gets the IP address collection policy.
            </summary>
            <value>
            The IP address collection policy.
            </value>
        </member>
        <member name="T:Rollbar.NetFramework.RollbarTelemetryConfigSection">
            <summary>
            Implements Rollbar Telemetry custom configuration section for .NET Framework only!
            </summary>
            <seealso cref="T:System.Configuration.ConfigurationSection" />
            <remarks>
            http://joelabrahamsson.com/creating-a-custom-configuration-section-in-net/
            https://msdn.microsoft.com/en-us/library/system.configuration.configurationsection.aspx
            https://docs.microsoft.com/en-us/dotnet/api/system.configuration.configurationsection?view=netframework-4.7.1
            </remarks>
        </member>
        <member name="M:Rollbar.NetFramework.RollbarTelemetryConfigSection.GetConfiguration">
            <summary>
            Gets the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarTelemetryConfigSection.TelemetryEnabled">
            <summary>
            Gets the telemetry enabled.
            </summary>
            <value>
            The telemetry enabled.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarTelemetryConfigSection.TelemetryQueueDepth">
            <summary>
            Gets the telemetry queue depth.
            </summary>
            <value>
            The telemetry queue depth.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarTelemetryConfigSection.TelemetryAutoCollectionTypes">
            <summary>
            Gets the telemetry automatic collection types.
            </summary>
            <value>
            The telemetry automatic collection types.
            </value>
        </member>
        <member name="P:Rollbar.NetFramework.RollbarTelemetryConfigSection.TelemetryAutoCollectionInterval">
            <summary>
            Gets the telemetry automatic collection interval.
            </summary>
            <value>
            The telemetry automatic collection interval.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Rollbar.NetStandard.RollbarTraceListener" -->
        <member name="P:Rollbar.NetStandard.RollbarTraceListener.Rollbar">
            <summary>
            Gets the Rollbar.
            </summary>
            <value>The rollbar.</value>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.NetStandard.RollbarTraceListener"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.NetStandard.RollbarTraceListener"/> class.
            </summary>
            <param name="rollbarAccessToken">The rollbar access token.</param>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.NetStandard.RollbarTraceListener"/> class.
            </summary>
            <param name="rollbarAccessToken">The rollbar access token.</param>
            <param name="rollbarEnvironment">The rollbar environment.</param>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.Write(System.String)">
            <summary>
            When overridden in a derived class, writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.WriteLine(System.String)">
            <summary>
            When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Writes trace information, a message, and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"></see> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"></see> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.GetRollbarTraceListenerConfig">
            <summary>
            Gets the Rollbar trace listener configuration.
            </summary>
            <returns>RollbarConfig.</returns>
        </member>
        <member name="M:Rollbar.NetStandard.RollbarTraceListener.GetSupportedAttributes">
            <summary>
            Gets the custom attributes supported by the trace listener.
            </summary>
            <returns>A string array naming the custom attributes supported by the trace listener, or null if there are no custom attributes.</returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.FramesTruncationStrategy">
            <summary>
            Implements "middle Frames reduction" Payload truncation strategy.
            </summary>
            <seealso cref="T:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase" />
        </member>
        <member name="M:Rollbar.PayloadTruncation.FramesTruncationStrategy.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.PayloadTruncation.FramesTruncationStrategy"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.PayloadTruncation.FramesTruncationStrategy.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.PayloadTruncation.FramesTruncationStrategy"/> class.
            </summary>
            <param name="totalHeadFramesToPreserve">The total head frames to preserve.</param>
            <param name="totalTailFramesToPreserve">The total tail frames to preserve.</param>
        </member>
        <member name="M:Rollbar.PayloadTruncation.FramesTruncationStrategy.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>
            Payload size (in bytes) after the truncation.
            </returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.IPayloadTruncationStrategy">
            <summary>
            Defines an interface for a payload truncation strategy implementation.
            </summary>
        </member>
        <member name="M:Rollbar.PayloadTruncation.IPayloadTruncationStrategy.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>Payload size (in bytes) after the truncation.</returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.IterativeTruncationStrategy">
            <summary>
            Implements "Iterative as needed" Payload truncation strategy.
            </summary>
            <seealso cref="T:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase" />
        </member>
        <member name="P:Rollbar.PayloadTruncation.IterativeTruncationStrategy.MaxPayloadSizeInBytes">
            <summary>
            Gets the maximum payload size in bytes.
            A truncation strategy attempts to truncate a provided payload to lesser or equal size.
            </summary>
            <value>
            The maximum payload size in bytes.
            </value>
        </member>
        <member name="M:Rollbar.PayloadTruncation.IterativeTruncationStrategy.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>
            Payload size (in bytes) after the truncation.
            </returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.MinBodyTruncationStrategy">
            <summary>
            Implements "Minimal Body" Payload truncation strategy.
            </summary>
            <seealso cref="T:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase" />
        </member>
        <member name="M:Rollbar.PayloadTruncation.MinBodyTruncationStrategy.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>
            Payload size (in bytes) after the truncation.
            </returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase">
            <summary>
            An abstract base for implementing Payload truncation strategies.
            </summary>
            <seealso cref="T:Rollbar.PayloadTruncation.IPayloadTruncationStrategy" />
        </member>
        <member name="M:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>
            Payload size (in bytes) after the truncation.
            </returns>
        </member>
        <member name="M:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase.GetSizeInBytes(Rollbar.DTOs.Payload)">
            <summary>
            Gets the size in bytes.
            </summary>
            <param name="payload">The payload.</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.RawTruncationStrategy">
            <summary>
            Implements "No-Op" Payload truncation strategy.
            </summary>
            <seealso cref="T:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase" />
        </member>
        <member name="M:Rollbar.PayloadTruncation.RawTruncationStrategy.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>
            Payload size (in bytes) after the truncation.
            </returns>
        </member>
        <member name="T:Rollbar.PayloadTruncation.StringsTruncationStrategy">
            <summary>
            Implements "Limited strings length" Payload truncation strategy.
            </summary>
            <seealso cref="T:Rollbar.PayloadTruncation.PayloadTruncationStrategyBase" />
        </member>
        <member name="M:Rollbar.PayloadTruncation.StringsTruncationStrategy.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.PayloadTruncation.StringsTruncationStrategy"/> class from being created.
            </summary>
        </member>
        <member name="M:Rollbar.PayloadTruncation.StringsTruncationStrategy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.PayloadTruncation.StringsTruncationStrategy"/> class.
            </summary>
            <param name="stringBytesLimit">The string bytes limit.</param>
        </member>
        <member name="M:Rollbar.PayloadTruncation.StringsTruncationStrategy.Truncate(Rollbar.DTOs.Payload)">
            <summary>
            Truncates the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <returns>
            Payload size (in bytes) after the truncation.
            </returns>
        </member>
        <member name="T:Rollbar.PersonDataCollectionPolicies">
            <summary>
            Lists all applicable Person data collection policies.
            </summary>
        </member>
        <member name="F:Rollbar.PersonDataCollectionPolicies.None">
            <summary>
            None of the personal data gets collected...
            </summary>
        </member>
        <member name="F:Rollbar.PersonDataCollectionPolicies.Username">
            <summary>
            The Person username gets collected...
            </summary>
        </member>
        <member name="F:Rollbar.PersonDataCollectionPolicies.Email">
            <summary>
            The Person email gets collected...
            </summary>
        </member>
        <member name="T:Rollbar.RollbarApiErrorEventArgs">
            <summary>
            Models a Rollbar API error event.
            </summary>
            <seealso cref="T:Rollbar.CommunicationEventArgs" />
        </member>
        <member name="T:Rollbar.RollbarApiErrorEventArgs.RollbarError">
            <summary>
            Known error codes.
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.None">
            <summary>
            Not an error.
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.BadRequest">
            <summary>
            The bad request
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.AccessDenied">
            <summary>
            The access denied
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.NotFound">
            <summary>
            Resource not found
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.RequestEntityTooLarge">
            <summary>
            The request entity too large
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.UnprocessableEntity">
            <summary>
            The unprocessable entity
            </summary>
        </member>
        <member name="F:Rollbar.RollbarApiErrorEventArgs.RollbarError.TooManyRequests">
            <summary>
            Too many requests
            </summary>
        </member>
        <member name="T:Rollbar.RollbarApiErrorEventArgs.RollbarErrorDetails">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rollbar.RollbarApiErrorEventArgs.RollbarErrorDetails.#ctor(Rollbar.RollbarApiErrorEventArgs.RollbarError,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.RollbarApiErrorEventArgs.RollbarErrorDetails"/> class.
            </summary>
            <param name="error">The error.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Rollbar.RollbarApiErrorEventArgs.RollbarErrorDetails.Error">
            <summary>
            Gets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Rollbar.RollbarApiErrorEventArgs.RollbarErrorDetails.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rollbar.RollbarApiErrorEventArgs.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="P:Rollbar.RollbarApiErrorEventArgs.ErrorType">
            <summary>
            Gets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:Rollbar.RollbarApiErrorEventArgs.ErrorDescription">
            <summary>
            Gets the error description.
            </summary>
            <value>
            The error description.
            </value>
        </member>
        <member name="M:Rollbar.RollbarApiErrorEventArgs.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.RollbarAssistant">
            <summary>
            This is a utility class assisting in collecting extra information for logging.
            </summary>
        </member>
        <member name="M:Rollbar.RollbarAssistant.CaptureState(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Captures the state (all the data fields' values of the provided instance).
            
            It captures all the static and instance data fields (public and non-public) 
            including the inherited ones (if there is any).
            </summary>
            <param name="instance">The instance.</param>
            <param name="instanceName">Name of the instance.</param>
            <param name="stateCapture">a instance of a state capture bag.</param>
            <returns>
            either the provided instance or a new instance of a state capture bag that is a dictionary of data field name/value pairs representing 
            the captured state of the supplied instance object or null whenever the state capture is not applicable 
            (for example, when instance argument happened to be uninitialized)
            </returns>
        </member>
        <member name="M:Rollbar.RollbarAssistant.CaptureState(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Captures the state of a static type (all the data fields' values of the provided static type).
            </summary>
            <param name="staticType">Type of a static class.</param>
            <param name="stateCapture">a instance of a state capture bag.</param>
            <returns>
            either the provided instance or a new instance of a state capture bag that is a dictionary of data field name/value pairs representing 
            the captured state of the supplied static type or null whenever the state capture is not applicable 
            (for example, when static type argument happened to represent an Enum or an interface).
            </returns>
        </member>
        <member name="T:Rollbar.RollbarClient">
            <summary>
            Client for accessing the Rollbar API
            </summary>
        </member>
        <member name="T:Rollbar.RollbarConfig">
            <summary>
            Models Rollbar client/notifier configuration data.
            </summary>
            <seealso cref="!:Rollbar.Common.ReconfigurableBase&lt;Rollbar.RollbarConfig&gt;" />
            <seealso cref="!:Common.ReconfigurableBase&lt;Rollbar.RollbarConfig&gt;" />
            <seealso cref="T:Rollbar.ITraceable" />
        </member>
        <member name="M:Rollbar.RollbarConfig.Reconfigure(Rollbar.IRollbarConfig)">
            <summary>
            Reconfigures this object similar to the specified one.
            </summary>
            <param name="likeMe">The pre-configured instance to be cloned in terms of its configuration/settings.</param>
            <returns>
            Reconfigured instance.
            </returns>
        </member>
        <member name="M:Rollbar.RollbarConfig.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.RollbarConfig"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
        </member>
        <member name="P:Rollbar.RollbarConfig.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.ScrubFields">
            <summary>
            Gets or sets the scrub fields.
            </summary>
            <value>
            The scrub fields.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.ScrubWhitelistFields">
            <summary>
            Gets the scrub white-list fields.
            </summary>
            <value>
            The scrub white-list fields.
            </value>
            <remarks>
            The fields mentioned in this list are guaranteed to be excluded
            from the ScrubFields list in cases when the lists overlap.
            </remarks>
        </member>
        <member name="P:Rollbar.RollbarConfig.LogLevel">
            <summary>
            Gets or sets the log level.
            </summary>
            <value>
            The log level.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.Enabled">
            <summary>
            Gets or sets the enabled.
            </summary>
            <value>
            The enabled.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.CheckIgnore">
            <summary>
            Gets or sets the check ignore.
            </summary>
            <value>
            The check ignore.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>
            The transform.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.Truncate">
            <summary>
            Gets or sets the truncate.
            </summary>
            <value>
            The truncate.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.Server">
            <summary>
            Gets or sets the server.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.Person">
            <summary>
            Gets or sets the person.
            </summary>
            <value>
            The person.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.ProxyAddress">
            <summary>
            Gets or sets the proxy address.
            </summary>
            <value>
            The proxy address.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.ProxyUsername">
            <summary>
            Gets the proxy username.
            </summary>
            <value>The proxy username.</value>
        </member>
        <member name="P:Rollbar.RollbarConfig.ProxyPassword">
            <summary>
            Gets the proxy password.
            </summary>
            <value>The proxy password.</value>
        </member>
        <member name="P:Rollbar.RollbarConfig.MaxReportsPerMinute">
            <summary>
            Gets or sets the maximum reports per minute.
            </summary>
            <value>
            The maximum reports per minute.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.ReportingQueueDepth">
            <summary>
            Gets or sets the reporting queue depth.
            </summary>
            <value>
            The reporting queue depth.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.MaxItems">
            <summary>
            Gets or sets the maximum items limit.
            </summary>
            <value>
            The maximum items.
            </value>
            <remarks>
            Max number of items to report per page load or per web request.
            When this limit is reached, an additional item will be reported stating that the limit was reached.
            Like MaxReportsPerMinute, this limit counts uncaught errors and any direct calls to Rollbar.log/debug/info/warning/error/critical().
            Default: 0 (no limit)
            </remarks>
        </member>
        <member name="P:Rollbar.RollbarConfig.CaptureUncaughtExceptions">
            <summary>
            Gets or sets a value indicating whether to auto-capture uncaught exceptions.
            </summary>
            <value>
              <c>true</c> if auto-capture uncaught exceptions is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.PersonDataCollectionPolicies">
            <summary>
            Gets or sets the person data collection policies.
            </summary>
            <value>
            The person data collection policies.
            </value>
        </member>
        <member name="P:Rollbar.RollbarConfig.IpAddressCollectionPolicy">
            <summary>
            Gets or sets the IP address collection policy.
            </summary>
            <value>
            The IP address collection policy.
            </value>
        </member>
        <member name="M:Rollbar.RollbarConfig.TraceAsString(System.String)">
            <summary>
            Traces as a string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="M:Rollbar.RollbarConfig.GetSafeScrubFields">
            <summary>
            Gets the safe scrub fields. 
            Basically this.ScrubFields "minus" this.ScrubWhitelistFields.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rollbar.RollbarEventArgs">
            <summary>
            An abstract base for implementing concrete Rollbar EventArgs.
            </summary>
            <seealso cref="T:System.EventArgs" />
            <seealso cref="T:Rollbar.ITraceable" />
        </member>
        <member name="M:Rollbar.RollbarEventArgs.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.RollbarEventArgs"/> class from being created.
            </summary>
        </member>
        <member name="P:Rollbar.RollbarEventArgs.Config">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Rollbar.RollbarEventArgs.Payload">
            <summary>
            Gets the payload.
            </summary>
            <value>
            The payload.
            </value>
        </member>
        <member name="M:Rollbar.RollbarEventArgs.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.RollbarFactory">
            <summary>
            RollbarFactory utility class.
            </summary>
        </member>
        <member name="M:Rollbar.RollbarFactory.CreateNew">
            <summary>
            Creates the new instance of IRollbar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.RollbarFactory.CreateNew(System.Boolean)">
            <summary>
            Creates the new instance of IRollbar.
            </summary>
            <param name="isSingleton">if set to <c>true</c> [is singleton].</param>
            <returns></returns>
        </member>
        <member name="T:Rollbar.RollbarLocator">
            <summary>
            Singleton-like locator of the single shared instance of IRollbar component.
            </summary>
        </member>
        <member name="P:Rollbar.RollbarLocator.RollbarInstance">
            <summary>
            Gets the singleton-like IRollbar instance.
            </summary>
            <value>
            The single shared IRollbar instance.
            </value>
        </member>
        <member name="T:Rollbar.RollbarLogger">
            <summary>
            Implements disposable implementation of IRollbar.
            
            All the logging methods implemented in async "fire-and-forget" fashion.
            Hence, the payload is not yet delivered to the Rollbar API service when
            the methods return.
            
            </summary>
            <seealso cref="T:Rollbar.IRollbar" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Rollbar.RollbarLogger.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <remarks>
            This code added to correctly implement the disposable pattern.
            </remarks>
        </member>
        <member name="T:Rollbar.RollbarLoggerBlockingWrapper">
            <summary>
            
            Implements disposable implementation of IRollbar.
            
            All the logging methods implemented in synchronous "blocking" fashion.
            Hence, the payload is either delivered or a method timed out when
            the methods return.
            
            </summary>
        </member>
        <member name="M:Rollbar.RollbarLoggerBlockingWrapper.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <remarks>
            This code added to correctly implement the disposable pattern.
            </remarks>
        </member>
        <member name="T:Rollbar.RollbarQueueController">
            <summary>
            RollbarQueueController singleton.
            It keeps track of payload queues of every instance of RollbarLogger.
            It is also responsible for async processing of queues on its own worker thread
            (including retries as necessary).
            It makes sure that Rollbar access token rate limits handled properly.
            </summary>
        </member>
        <member name="P:Rollbar.RollbarQueueController.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:Rollbar.RollbarQueueController.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.RollbarQueueController"/> class from being created.
            </summary>
        </member>
        <member name="E:Rollbar.RollbarQueueController.InternalEvent">
            <summary>
            Occurs after a Rollbar internal event happens.
            </summary>
        </member>
        <member name="M:Rollbar.RollbarQueueController.Register(Rollbar.PayloadQueue)">
            <summary>
            Registers the specified queue.
            </summary>
            <param name="queue">The queue.</param>
        </member>
        <member name="M:Rollbar.RollbarQueueController.Unregister(Rollbar.PayloadQueue)">
            <summary>
            Unregisters the specified queue.
            </summary>
            <param name="queue">The queue.</param>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetQueuesCount(System.String)">
            <summary>
            Gets the queues count.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetTotalPayloadCount">
            <summary>
            Gets the total payload count across all the queues.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetPayloadCount(System.String)">
            <summary>
            Gets the payload count.
            </summary>
            <param name="accessToken">Converts to ken.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetPayloadCount(Rollbar.IRollbar)">
            <summary>Gets the payload count.</summary>
            <param name="rollbar">The rollbar.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetRecommendedTimeout(System.String)">
            <summary>Gets the recommended timeout.</summary>
            <param name="accessToken">The Rollbar access token.</param>
            <returns>TimeSpan.</returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetRecommendedTimeout(Rollbar.IRollbar)">
            <summary>Gets the recommended timeout.</summary>
            <param name="rollbar">The rollbar.</param>
            <returns>TimeSpan.</returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.GetRecommendedTimeout">
            <summary>
            Gets the recommended timeout.
            </summary>
            <returns>TimeSpan.</returns>
        </member>
        <member name="M:Rollbar.RollbarQueueController.FlushQueues">
            <summary>
            Flushes the queues. 
            All current payloads in every queue get removed (without transmitting them to the Rollbar API).
            </summary>
        </member>
        <member name="M:Rollbar.RollbarQueueController.Stop(System.Boolean)">
            <summary>
            Stops the queues processing.
            </summary>
        </member>
        <member name="T:Rollbar.RollbarResponse">
            <summary>
            Models Rollbar API response.
            </summary>
            <seealso cref="T:Rollbar.ITraceable" />
        </member>
        <member name="P:Rollbar.RollbarResponse.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Rollbar.RollbarResponse.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="P:Rollbar.RollbarResponse.HttpDetails">
            <summary>
            Gets or sets the HTTP details.
            </summary>
            <value>
            The HTTP details.
            </value>
        </member>
        <member name="M:Rollbar.RollbarResponse.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.RollbarResult">
            <summary>
            Models Rollbar API response result.
            </summary>
            <seealso cref="T:Rollbar.ITraceable" />
        </member>
        <member name="P:Rollbar.RollbarResult.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Rollbar.RollbarResult.Uuid">
            <summary>
            Gets or sets the UUID.
            </summary>
            <value>
            The UUID.
            </value>
        </member>
        <member name="M:Rollbar.RollbarResult.TraceAsString(System.String)">
            <summary>
            Traces as string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>String rendering of this instance.</returns>
        </member>
        <member name="T:Rollbar.Serialization.Json.DictionaryConverter">
            <summary>
            DictionaryConverter simplifies Json de/serialization of .NET Dictionaries.
            </summary>
            <seealso cref="!:Json.JsonConverter&lt;System.Collections.Generic.IDictionary&lt;System.String, System.Object&gt;&gt;" />
        </member>
        <member name="P:Rollbar.Serialization.Json.DictionaryConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON.
            </summary>
            <value>
              <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can read JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Rollbar.Serialization.Json.DictionaryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Collections.Generic.IDictionary{System.String,System.Object},Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">This library is currently not configured to fetch data from Rollbar</exception>
        </member>
        <member name="M:Rollbar.Serialization.Json.DictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IDictionary{System.String,System.Object},Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="T:Rollbar.Serialization.Json.ErrorLevelConverter">
            <summary>
            ErrorLevelConverter simplifies ErrorLevel Json de/serialization.
            </summary>
            <seealso cref="!:Rollbar.Serialization.Json.JsonConverter&lt;Rollbar.ErrorLevel&gt;" />
        </member>
        <member name="M:Rollbar.Serialization.Json.ErrorLevelConverter.WriteJson(Newtonsoft.Json.JsonWriter,Rollbar.ErrorLevel,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:Rollbar.Serialization.Json.ErrorLevelConverter.ReadJson(Newtonsoft.Json.JsonReader,Rollbar.ErrorLevel,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns></returns>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">
            </exception>
        </member>
        <member name="T:Rollbar.Serialization.Json.JsonConverter`1">
            <summary>
            Abstract base for implementing Json converters.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException"></exception>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">
            </exception>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,`0,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Rollbar.Serialization.Json.JsonScrubber">
            <summary>
            A utility class aiding in scrubbing Json data fields.
            </summary>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonScrubber.FilterOutCriticalFields(System.String[],System.String[])">
            <summary>
            Filters out the critical fields (using case sensitive string comparing).
            </summary>
            <param name="inputFields">The input fields.</param>
            <param name="criticalDataFields">The critical data fields.</param>
            <returns>Filtered input fields without the critical ones.</returns>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonScrubber.CreateJsonObject(System.String)">
            <summary>
            Creates the Json object.
            </summary>
            <param name="jsonData">The json data.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonScrubber.GetChildPropertyByName(Newtonsoft.Json.Linq.JContainer,System.String)">
            <summary>
            Gets the child Json property by name.
            </summary>
            <param name="root">The root.</param>
            <param name="childPropertyName">Name of the child property.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonScrubber.ScrubJson(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Scrubs the Json data string.
            </summary>
            <param name="jsonData">The json data.</param>
            <param name="scrubFields">The scrub fields.</param>
            <returns>scrubbed Json string.</returns>
        </member>
        <member name="M:Rollbar.Serialization.Json.JsonScrubber.ScrubJson(Newtonsoft.Json.Linq.JProperty,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Scrubs the Json.
            </summary>
            <param name="json">The json.</param>
            <param name="scrubFields">The scrub fields.</param>
        </member>
        <member name="T:Rollbar.Telemetry.ITelemetryCollector">
            <summary>
            Defines interface of Rollbar telemetry collector.
            </summary>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryCollector.Config">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Rollbar.Telemetry.ITelemetryCollector.Capture(Rollbar.DTOs.Telemetry)">
            <summary>
            Captures the specified telemetry.
            </summary>
            <param name="telemetry">The telemetry.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.ITelemetryCollector.GetItemsCount">
            <summary>
            Gets the items count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.ITelemetryCollector.GetQueueContent">
            <summary>
            Gets the content of the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryCollector.QueueDepth">
            <summary>
            Gets the queue depth.
            </summary>
            <value>
            The queue depth.
            </value>
        </member>
        <member name="M:Rollbar.Telemetry.ITelemetryCollector.FlushQueue">
            <summary>
            Flushes the queue.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.ITelemetryCollector.StartAutocollection">
            <summary>
            Starts the auto-collection.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.ITelemetryCollector.StopAutocollection(System.Boolean)">
            <summary>
            Stops the auto-collection.
            </summary>
            <param name="immediate">if set to <c>true</c> [immediate].</param>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryCollector.IsAutocollecting">
            <summary>
            Gets a value indicating whether this instance is auto-collecting.
            </summary>
            <value>
              <c>true</c> if this instance is auto-collecting; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rollbar.Telemetry.ITelemetryConfig">
            <summary>
            Defines telemetry configuration interface.
            </summary>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryConfig.TelemetryEnabled">
            <summary>
            Gets a value indicating whether telemetry is enabled.
            </summary>
            <value>
              <c>true</c> if telemetry is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryConfig.TelemetryQueueDepth">
            <summary>
            Gets the telemetry queue depth.
            </summary>
            <value>
            The telemetry queue depth.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryConfig.TelemetryAutoCollectionTypes">
            <summary>
            Gets the telemetry automatic collection types.
            </summary>
            <value>
            The telemetry automatic collection types.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.ITelemetryConfig.TelemetryAutoCollectionInterval">
            <summary>
            Gets the telemetry automatic collection interval.
            </summary>
            <value>
            The telemetry automatic collection interval.
            </value>
        </member>
        <member name="T:Rollbar.Telemetry.TelemetryCollector">
            <summary>
            Implements Rollbar telemetry collector service.
            </summary>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryCollector.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Rollbar.Telemetry.TelemetryCollector"/> class from being created.
            </summary>
        </member>
        <member name="F:Rollbar.Telemetry.TelemetryCollector.NestedSingleInstance.Instance">
            <summary>
            The singleton-like instance of the service.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.Capture(Rollbar.DTOs.Telemetry)">
            <summary>
            Captures the specified telemetry.
            </summary>
            <param name="telemetry">The telemetry.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.Rollbar#Telemetry#ITelemetryCollector#Capture(Rollbar.DTOs.Telemetry)">
            <summary>
            Captures the specified telemetry.
            </summary>
            <param name="telemetry">The telemetry.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.GetItemsCount">
            <summary>
            Gets the items count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.GetQueueContent">
            <summary>
            Gets the content of the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.FlushQueue">
            <summary>
            Flushes the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryCollector.Config">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.StartAutocollection">
            <summary>
            Starts the auto-collection.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryCollector.StopAutocollection(System.Boolean)">
            <summary>
            Stops the auto-collection.
            </summary>
            <param name="immediate">if set to <c>true</c> [immediate].</param>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryCollector.IsAutocollecting">
            <summary>
            Gets a value indicating whether this instance is auto-collecting.
            </summary>
            <value>
              <c>true</c> if this instance is auto-collecting; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryCollector.QueueDepth">
            <summary>
            Gets the queue depth.
            </summary>
            <value>
            The queue depth.
            </value>
        </member>
        <member name="T:Rollbar.Telemetry.TelemetryConfig">
            <summary>
            
            </summary>
            <seealso cref="!:Rollbar.Common.ReconfigurableBase&lt;Rollbar.Telemetry.TelemetryConfig, Rollbar.Telemetry.ITelemetryConfig&gt;" />
            <seealso cref="T:Rollbar.Telemetry.ITelemetryConfig" />
            <seealso cref="T:Rollbar.ITraceable" />
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Telemetry.TelemetryConfig"/> class.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryConfig.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Telemetry.TelemetryConfig"/> class.
            </summary>
            <param name="telemetryEnabled">if set to <c>true</c> [telemetry enabled].</param>
            <param name="telemetryQueueDepth">The telemetry queue depth.</param>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryConfig.#ctor(System.Boolean,System.Int32,Rollbar.DTOs.TelemetryType,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Telemetry.TelemetryConfig" /> class.
            </summary>
            <param name="telemetryEnabled">if set to <c>true</c> [telemetry enabled].</param>
            <param name="telemetryQueueDepth">The telemetry queue depth.</param>
            <param name="telemetryAutoCollectionTypes">The telemetry automatic collection types.</param>
            <param name="telemetryCollectionInterval">The telemetry collection interval.</param>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryConfig.TelemetryEnabled">
            <summary>
            Gets a value indicating whether telemetry is enabled.
            </summary>
            <value>
            <c>true</c> if telemetry is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryConfig.TelemetryQueueDepth">
            <summary>
            Gets the telemetry queue depth.
            </summary>
            <value>
            The telemetry queue depth.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryConfig.TelemetryAutoCollectionTypes">
            <summary>
            Gets the telemetry automatic collection types.
            </summary>
            <value>
            The telemetry automatic collection types.
            </value>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryConfig.TelemetryAutoCollectionInterval">
            <summary>
            Gets the telemetry automatic collection interval.
            </summary>
            <value>
            The telemetry automatic collection interval.
            </value>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryConfig.TraceAsString(System.String)">
            <summary>
            Traces as a string.
            </summary>
            <param name="indent">The indent.</param>
            <returns>
            String rendering of this instance.
            </returns>
        </member>
        <member name="T:Rollbar.Telemetry.TelemetryQueue">
            <summary>
            Fixed depth queue of telemetry items.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rollbar.Telemetry.TelemetryQueue"/> class.
            </summary>
        </member>
        <member name="P:Rollbar.Telemetry.TelemetryQueue.QueueDepth">
            <summary>
            Gets or sets the queue depth.
            </summary>
            <value>
            The queue depth.
            </value>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.GetQueueContent">
            <summary>
            Gets the content of the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.Enqueue(Rollbar.DTOs.Telemetry)">
            <summary>
            Enqueues the specified telemetry.
            </summary>
            <param name="telemetry">The telemetry.</param>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.GetItemsCount">
            <summary>
            Gets the items count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.Flush">
            <summary>
            Flushes this instance.
            </summary>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.Peek">
            <summary>
            Peeks this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Telemetry.TelemetryQueue.Dequeue">
            <summary>
            Dequeues this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rollbar.Telemetry.TelemetryUtil">
            <summary>
            TODO: complete the implementation...
            </summary>
        </member>
        <member name="T:Rollbar.Utils.ReflectionUtil">
            <summary>
            A utility class aiding with .NET Reflection.
            </summary>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetAllPublicInstanceProperties(System.Type)">
            <summary>
            Gets all public instance properties.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetAllPublicStaticFields(System.Type)">
            <summary>
            Gets all public static fields.
            </summary>
            <param name="type">The type.</param>
            <returns>All discovered FieldInfos.</returns>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetStaticFieldValue``1(System.Reflection.FieldInfo)">
            <summary>
            Gets the static field value.
            </summary>
            <typeparam name="TFieldDataType">The type of the field data type.</typeparam>
            <param name="staticField">The static field.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetAllPublicStaticFieldValues``1(System.Type)">
            <summary>
            Gets all public static field values.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="type">The type.</param>
            <returns>All the field values.</returns>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetNestedTypes(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets the nested types.
            </summary>
            <param name="hostType">Type of the host.</param>
            <param name="nestedTypesBindingFlags">The nested types binding flags.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetNestedTypeByName(System.Type,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets the nested type by its name.
            </summary>
            <param name="hostType">Type of the host.</param>
            <param name="nestedTypeName">Name of the nested type (without its namespace).</param>
            <param name="nestedTypeBindingFlags">The nested type binding flags.</param>
            <returns></returns>
        </member>
        <member name="M:Rollbar.Utils.ReflectionUtil.GetSubClassesOf(System.Type)">
            <summary>
            Gets the sub classes of a given type 
            from the same assembly where the base type is defined.
            </summary>
            <param name="baseType">Type of the base.</param>
            <returns>Array of the derived types</returns>
        </member>
        <member name="T:Xamarin.iOS.Foundation.PreserveAttribute">
            <summary>
            
            This attribute could be used for decorating some classes or their members
            in order to prevent removal of unused members (that in fact could be still 
            used by the Reflection) by the mtouch's Linker during the optimization phase.
            
            </summary>
            <seealso cref="T:System.Attribute" />
            <remarks>
            When building your application, Visual Studio for Mac or Visual Studio calls a tool called mtouch 
            that includes a linker for managed code. It is used to remove from the class libraries the features 
            that the application is not using. The goal is to reduce the size of the application, 
            which will ship with only the necessary bits.
            
            The linker uses static analysis to determine the different code paths that your application is 
            susceptible to follow.It's a bit heavy as it has to go through every detail of each assembly, 
            to make sure that nothing discoverable is removed. It is not enabled by default on the simulator 
            builds to speed up the build time while debugging. However since it produces smaller applications 
            it can speed up AOT compilation and uploading to the device, all devices (Release) builds are using 
            the linker by default.
            
            As the linker is a static tool, it can not mark for inclusion types and methods that are called 
            through reflection, or dynamically instantiated.Several options exists to workaround this limitation.
            Use of PreserveAttribute is one of them.
            
            For more detail regarding the use of this attribute, please, refer to:
            https://docs.microsoft.com/en-us/xamarin/ios/deploy-test/linker?tabs=vsmac
            </remarks>
        </member>
        <member name="P:Xamarin.iOS.Foundation.PreserveAttribute.AllMembers">
            <summary>
            Signifies whether all members of the decorated type should be preserved. 
            Default value is true.
            </summary>
        </member>
        <member name="P:Xamarin.iOS.Foundation.PreserveAttribute.Conditional">
            <summary>
            Signifies that the decorated member should be preserved only 
            if the containing type was preserved.
            </summary>
        </member>
    </members>
</doc>
